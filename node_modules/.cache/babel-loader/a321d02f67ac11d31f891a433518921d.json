{"ast":null,"code":"export const initialState = {\n  basket: [],\n  user: null\n}; // Selector\n// export const getBasketTotal = (basket) => \n//     basket?.reduce( (amount, item) => item.price + amount, 0 )\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case 'ADD_TO_BASKET':\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case 'EMPTY_BASKET':\n      return { ...state,\n        basket: []\n      };\n\n    case 'REMOVE_FROM_BASKET':\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Cant remove product (id: ${action.id}) as its not in basket!`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    case \"SET_USER\":\n      return { ...state,\n        user: action.user\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/saad/Downloads/Dunzoo/src/Reducer.js"],"names":["initialState","basket","user","reducer","state","action","console","log","type","item","index","findIndex","basketItem","id","newBasket","splice","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAE,EADgB;AAExBC,EAAAA,IAAI,EAAE;AAFkB,CAArB,C,CAKP;AACA;AACA;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAE/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAOA,MAAM,CAACG,IAAd;AACI,SAAK,eAAL;AACI,aAAO,EACH,GAAGJ,KADA;AAEHH,QAAAA,MAAM,EAAE,CAAC,GAAGG,KAAK,CAACH,MAAV,EAAkBI,MAAM,CAACI,IAAzB;AAFL,OAAP;;AAKJ,SAAK,cAAL;AACI,aAAO,EACH,GAAGL,KADA;AAEHH,QAAAA,MAAM,EAAE;AAFL,OAAP;;AAKJ,SAAK,oBAAL;AACI,YAAMS,KAAK,GAAGN,KAAK,CAACH,MAAN,CAAaU,SAAb,CACTC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBR,MAAM,CAACQ,EAD/B,CAAd;AAGA,UAAIC,SAAS,GAAG,CAAC,GAAGV,KAAK,CAACH,MAAV,CAAhB;;AAEA,UAAGS,KAAK,IAAI,CAAZ,EAAgB;AACZI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAwB,CAAxB;AACH,OAFD,MAEO;AACHJ,QAAAA,OAAO,CAACU,IAAR,CAAc,4BAA2BX,MAAM,CAACQ,EAAG,yBAAnD;AACH;;AAED,aAAO,EACH,GAAGT,KADA;AAEHH,QAAAA,MAAM,EAAEa;AAFL,OAAP;;AAIJ,SAAK,UAAL;AACI,aAAO,EACH,GAAGV,KADA;AAEHF,QAAAA,IAAI,EAAEG,MAAM,CAACH;AAFV,OAAP;;AAKJ;AACI,aAAOE,KAAP;AApCR;AAsCH,CAzCD;;AA2CA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n    basket: [],\n    user: null\n};\n\n// Selector\n// export const getBasketTotal = (basket) => \n//     basket?.reduce( (amount, item) => item.price + amount, 0 )\n\nconst reducer = (state, action) => {\n\n    console.log(action);\n    switch(action.type) {\n        case 'ADD_TO_BASKET':\n            return {\n                ...state,\n                basket: [...state.basket, action.item]\n            };\n\n        case 'EMPTY_BASKET':\n            return {\n                ...state,\n                basket: []\n            }\n\n        case 'REMOVE_FROM_BASKET':\n            const index = state.basket.findIndex(\n                (basketItem) => basketItem.id === action.id\n            )\n            let newBasket = [...state.basket];\n\n            if(index >= 0 ) {\n                newBasket.splice(index, 1);\n            } else {\n                console.warn(`Cant remove product (id: ${action.id}) as its not in basket!`)\n            }\n\n            return {\n                ...state,\n                basket: newBasket\n            }\n        case \"SET_USER\" :\n            return {\n                ...state,\n                user: action.user\n            }\n                \n        default:\n            return state;\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}