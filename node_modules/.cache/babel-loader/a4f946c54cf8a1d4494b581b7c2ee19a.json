{"ast":null,"code":"import _regeneratorRuntime from\"/home/saad/Downloads/Dunzoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/saad/Downloads/Dunzoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/saad/Downloads/Dunzoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Link,useHistory}from'react-router-dom';import CheckoutProduct from'./CheckoutProduct';import\"../assets/css/Payment.css\";import{useStateValue}from\"../StateProvider\";import{CardElement,useElements,useStripe}from'@stripe/react-stripe-js';import CurrencyFormat from'react-currency-format';import axios from'../axios';import{db}from'../firebase';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function Payment(){var _useStateValue=useStateValue(),_useStateValue2=_slicedToArray(_useStateValue,2),_useStateValue2$=_useStateValue2[0],basket=_useStateValue2$.basket,user=_useStateValue2$.user,dispatch=_useStateValue2[1];var history=useHistory();var stripe=useStripe();var elements=useElements();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),succeeded=_useState2[0],setSucceeded=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),processing=_useState4[0],setProcessing=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),disabled=_useState8[0],setDisabled=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),clientSecret=_useState10[0],setClientSecret=_useState10[1];var getBasketTotal=0;for(var i=0;i<basket.length;i++){getBasketTotal+=basket[i].price;}useEffect(function(){// Generate the special stripe secret which allows us to\n// charge a customer\nvar getClientSecret=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios({method:'post',// Stripe expects the total in a currencies subunits\nurl:\"/payments/create?total=\".concat(getBasketTotal*100)});case 2:response=_context.sent;setClientSecret(response.data.clientSecret);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getClientSecret(){return _ref.apply(this,arguments);};}();getClientSecret();},[basket]);console.log(\"The secret is \",clientSecret);var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var payload;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:event.preventDefault();setProcessing(true);_context2.next=4;return stripe.confirmCardPayment(clientSecret,{payment_method:{card:elements.getElement(CardElement)}}).then(function(_ref3){var paymentIntent=_ref3.paymentIntent;// payment Intent = payment confirmation\ndb.collection('users').doc(user===null||user===void 0?void 0:user.uid).collection('orders').doc(paymentIntent.id).set({basket:basket,amount:paymentIntent.amount,created:paymentIntent.created});setSucceeded(true);setError(null);setProcessing(false);dispatch({type:\"EMPTY_BASKET\"});history.replace(\"/orders\");});case 4:payload=_context2.sent;case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleChange=function handleChange(event){// Listen and changes in the CardElement and display any\n// errors as the customer type their card details\nsetDisabled(event.empty);setError(event.error?event.error.message:\"\");};return/*#__PURE__*/_jsx(\"div\",{className:\"payment\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"payment__container\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Checkout (\",/*#__PURE__*/_jsxs(Link,{to:\"/checkout\",children:[basket===null||basket===void 0?void 0:basket.length,\" items\"]}),\")\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment__section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"payment__title\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Delivery Address\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment__address\",children:[/*#__PURE__*/_jsx(\"p\",{children:user===null||user===void 0?void 0:user.email}),/*#__PURE__*/_jsx(\"p\",{children:\" Noida, Uttar Pradesh, India \"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment__section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"payment__title\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Review items and delivery\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"payment__items\",children:basket.map(function(item){return/*#__PURE__*/_jsx(CheckoutProduct,{id:item.id,title:item.title,image:item.image,price:item.price,rating:item.rating});})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment__section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"payment__title\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Payment Method\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"payment__details\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(CardElement,{onChange:handleChange}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment__priceContainer\",children:[/*#__PURE__*/_jsx(CurrencyFormat,{renderText:function renderText(value){return/*#__PURE__*/_jsxs(\"h3\",{children:[\"Order Total: \",value]});},decimalScale:2,value:getBasketTotal,displayType:\"text\",thousandSeparator:true,prefix:\"Rs\"}),/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#EAEDED',padding:'10px 10px'},children:[/*#__PURE__*/_jsx(\"small\",{children:\"Card Number: abcd abcd abcd abcd\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"small\",{children:\" MM / YY\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"small\",{children:\"CVC : abcd \"})]}),/*#__PURE__*/_jsx(\"button\",{disabled:processing||disabled||succeeded,children:/*#__PURE__*/_jsx(\"span\",{children:processing?/*#__PURE__*/_jsx(\"p\",{children:\"Processing\"}):\"Buy Now\"})})]}),error&&/*#__PURE__*/_jsx(\"div\",{children:error})]})})]})]})});}export default Payment;","map":{"version":3,"sources":["/home/saad/Downloads/Dunzoo/src/Components/Payment.js"],"names":["React","useEffect","useState","Link","useHistory","CheckoutProduct","useStateValue","CardElement","useElements","useStripe","CurrencyFormat","axios","db","Payment","basket","user","dispatch","history","stripe","elements","succeeded","setSucceeded","processing","setProcessing","error","setError","disabled","setDisabled","clientSecret","setClientSecret","getBasketTotal","i","length","price","getClientSecret","method","url","response","data","console","log","handleSubmit","event","preventDefault","confirmCardPayment","payment_method","card","getElement","then","paymentIntent","collection","doc","uid","id","set","amount","created","type","replace","payload","handleChange","empty","message","email","map","item","title","image","rating","value","backgroundColor","padding"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom';\nimport CheckoutProduct from './CheckoutProduct';\nimport \"../assets/css/Payment.css\"\nimport { useStateValue } from \"../StateProvider\";\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport CurrencyFormat from 'react-currency-format';\nimport axios from '../axios';\nimport { db } from '../firebase';\n\nfunction Payment() {\n\n    const [{ basket, user }, dispatch] = useStateValue();\n    const history = useHistory();\n\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const [succeeded, setSucceeded] = useState(false);\n    const [processing, setProcessing] = useState(\"\");\n    const [error, setError] = useState(null);\n    const [disabled, setDisabled] = useState(true);\n    const [clientSecret, setClientSecret] = useState(true);\n\n    var getBasketTotal = 0;\n    \n    for(var i=0; i<basket.length; i++) {\n        getBasketTotal += basket[i].price;\n    }\n\n    useEffect(() => {\n        // Generate the special stripe secret which allows us to\n        // charge a customer\n        const getClientSecret = async () => {\n            const response = await axios ({\n                method: 'post',\n                // Stripe expects the total in a currencies subunits\n                url: `/payments/create?total=${getBasketTotal * 100}`\n            });\n            setClientSecret(response.data.clientSecret)\n        }\n\n        getClientSecret();\n    }, [basket])\n\n    console.log(\"The secret is \", clientSecret)\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setProcessing(true);\n\n        const payload = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n                card: elements.getElement(CardElement)\n            }\n        }).then(({ paymentIntent }) => {\n            // payment Intent = payment confirmation\n            \n            db\n              .collection('users')\n              .doc(user?.uid)\n              .collection('orders')\n              .doc(paymentIntent.id)\n              .set({\n                  basket: basket,\n                  amount: paymentIntent.amount,\n                  created: paymentIntent.created\n              })\n\n            setSucceeded(true);\n            setError(null)\n            setProcessing(false)\n\n            dispatch({\n                type: \"EMPTY_BASKET\"\n            })\n\n            history.replace(\"/orders\")\n        })\n    }\n\n    const handleChange = event => {\n        // Listen and changes in the CardElement and display any\n        // errors as the customer type their card details\n        setDisabled(event.empty);\n        setError(event.error ? event.error.message : \"\");\n    }\n\n    return (\n        <div className=\"payment\">\n            <div className=\"payment__container\">\n\n                <h1>Checkout ({<Link to=\"/checkout\">{basket?.length} items</Link>})</h1>\n\n                {/* Payment section => Delivery Address */}\n                <div className=\"payment__section\">\n                    <div className=\"payment__title\">\n                        <h3>Delivery Address</h3>\n                    </div>\n                    <div className=\"payment__address\">\n                        <p>{user?.email}</p>\n                        <p> Noida, Uttar Pradesh, India </p>\n                    </div>\n                </div>\n\n                {/* Payment section => Review Items*/}\n                <div className=\"payment__section\">\n                    <div className=\"payment__title\">\n                        <h3>Review items and delivery</h3> \n                    </div>\n                    <div className=\"payment__items\">\n                        {/* Products */}\n                        {basket.map(item => (\n                            <CheckoutProduct\n                                id={item.id}\n                                title={item.title}\n                                image={item.image}\n                                price={item.price}\n                                rating={item.rating}\n                            />\n                        ))}\n                    </div>\n                </div>\n\n                {/* Payment section => Payment Method*/}\n                <div className=\"payment__section\">\n                    <div className=\"payment__title\">\n                        <h3>Payment Method</h3>\n                    </div>\n                    <div className=\"payment__details\">\n                        <form onSubmit={handleSubmit}>\n                            <CardElement onChange={handleChange}/>\n\n                            <div className=\"payment__priceContainer\">\n                                <CurrencyFormat\n                                    renderText={(value) => (\n                                        <h3>Order Total: {value}</h3>\n                                    )}\n                                    decimalScale={2}\n                                    value ={getBasketTotal}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    prefix={\"Rs\"}\n                                />\n\n                            <div style={{backgroundColor:'#EAEDED', padding:'10px 10px'}}>\n                                <small>Card Number: abcd abcd abcd abcd</small>\n                                <br></br>\n                                <small> MM / YY</small>\n                                <br></br>\n                                <small>CVC : abcd </small>\n                            </div>\n                                <button disabled={processing || disabled || succeeded}>\n                                    <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\n                                </button>\n                            </div>\n\n                            {/* Error */}\n                            {error && <div>{error}</div>}\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Payment\n"]},"metadata":{},"sourceType":"module"}