{"ast":null,"code":"var _jsxFileName = \"/home/saad/Downloads/Dunzoo/src/Components/Payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport CheckoutProduct from './CheckoutProduct';\nimport \"../assets/css/Payment.css\";\nimport { useStateValue } from \"../StateProvider\";\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport CurrencyFormat from 'react-currency-format';\nimport axios from '../axios';\nimport { db } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Payment() {\n  _s();\n\n  const [{\n    basket,\n    user\n  }, dispatch] = useStateValue();\n  const history = useHistory();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(true);\n  var getBasketTotal = 0;\n\n  for (var i = 0; i < basket.length; i++) {\n    getBasketTotal += basket[i].price;\n  }\n\n  useEffect(() => {\n    // Generate the special stripe secret which allows us to\n    // charge a customer\n    const getClientSecret = async () => {\n      const response = await axios({\n        method: 'post',\n        // Stripe expects the total in a currencies subunits\n        url: `/payments/create?total=${getBasketTotal * 100}`\n      });\n      setClientSecret(response.data.clientSecret);\n    };\n\n    getClientSecret();\n  }, [basket]);\n  console.log(\"The secret is \", clientSecret);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    }).then(({\n      paymentIntent\n    }) => {\n      // payment Intent = payment confirmation\n      db.collection('users').doc(user === null || user === void 0 ? void 0 : user.uid).collection('orders').doc(paymentIntent.id).set({\n        basket: basket,\n        amount: paymentIntent.amount,\n        created: paymentIntent.created\n      });\n      setSucceeded(true);\n      setError(null);\n      setProcessing(false);\n      dispatch({\n        type: \"EMPTY_BASKET\"\n      });\n      history.replace(\"/orders\");\n    });\n  };\n\n  const handleChange = event => {\n    // Listen and changes in the CardElement and display any\n    // errors as the customer type their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Checkout (\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/checkout\",\n          children: [basket === null || basket === void 0 ? void 0 : basket.length, \" items\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 32\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Delivery Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__address\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: user === null || user === void 0 ? void 0 : user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"14 Fake Street \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Delhi, India\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Review items and delivery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__items\",\n          children: basket.map(item => /*#__PURE__*/_jsxDEV(CheckoutProduct, {\n            id: item.id,\n            title: item.title,\n            image: item.image,\n            price: item.price,\n            rating: item.rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Payment Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__details\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(CardElement, {\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"payment__priceContainer\",\n              children: [/*#__PURE__*/_jsxDEV(CurrencyFormat, {\n                renderText: value => /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Order Total: \", value]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 41\n                }, this),\n                decimalScale: 2,\n                value: getBasketTotal,\n                displayType: \"text\",\n                thousandSeparator: true,\n                prefix: \"$\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  backgroundColor: '#EAEDED',\n                  padding: '10px 10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Card Number: abcd abcd abcd abcd\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \" MM / YY4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"CVC :42424 \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: processing || disabled || succeeded,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: processing ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Processing\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 57\n                  }, this) : \"Buy Now\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Payment, \"wwvkYTX8kXeAM+bDqmI5HXwQxYE=\", false, function () {\n  return [useStateValue, useHistory, useStripe, useElements];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["/home/saad/Downloads/Dunzoo/src/Components/Payment.js"],"names":["React","useEffect","useState","Link","useHistory","CheckoutProduct","useStateValue","CardElement","useElements","useStripe","CurrencyFormat","axios","db","Payment","basket","user","dispatch","history","stripe","elements","succeeded","setSucceeded","processing","setProcessing","error","setError","disabled","setDisabled","clientSecret","setClientSecret","getBasketTotal","i","length","price","getClientSecret","response","method","url","data","console","log","handleSubmit","event","preventDefault","payload","confirmCardPayment","payment_method","card","getElement","then","paymentIntent","collection","doc","uid","id","set","amount","created","type","replace","handleChange","empty","message","email","map","item","title","image","rating","value","backgroundColor","padding"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom';\nimport CheckoutProduct from './CheckoutProduct';\nimport \"../assets/css/Payment.css\"\nimport { useStateValue } from \"../StateProvider\";\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport CurrencyFormat from 'react-currency-format';\nimport axios from '../axios';\nimport { db } from '../firebase';\n\nfunction Payment() {\n\n    const [{ basket, user }, dispatch] = useStateValue();\n    const history = useHistory();\n\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const [succeeded, setSucceeded] = useState(false);\n    const [processing, setProcessing] = useState(\"\");\n    const [error, setError] = useState(null);\n    const [disabled, setDisabled] = useState(true);\n    const [clientSecret, setClientSecret] = useState(true);\n\n    var getBasketTotal = 0;\n    \n    for(var i=0; i<basket.length; i++) {\n        getBasketTotal += basket[i].price;\n    }\n\n    useEffect(() => {\n        // Generate the special stripe secret which allows us to\n        // charge a customer\n        const getClientSecret = async () => {\n            const response = await axios ({\n                method: 'post',\n                // Stripe expects the total in a currencies subunits\n                url: `/payments/create?total=${getBasketTotal * 100}`\n            });\n            setClientSecret(response.data.clientSecret)\n        }\n\n        getClientSecret();\n    }, [basket])\n\n    console.log(\"The secret is \", clientSecret)\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setProcessing(true);\n\n        const payload = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n                card: elements.getElement(CardElement)\n            }\n        }).then(({ paymentIntent }) => {\n            // payment Intent = payment confirmation\n            \n            db\n              .collection('users')\n              .doc(user?.uid)\n              .collection('orders')\n              .doc(paymentIntent.id)\n              .set({\n                  basket: basket,\n                  amount: paymentIntent.amount,\n                  created: paymentIntent.created\n              })\n\n            setSucceeded(true);\n            setError(null)\n            setProcessing(false)\n\n            dispatch({\n                type: \"EMPTY_BASKET\"\n            })\n\n            history.replace(\"/orders\")\n        })\n    }\n\n    const handleChange = event => {\n        // Listen and changes in the CardElement and display any\n        // errors as the customer type their card details\n        setDisabled(event.empty);\n        setError(event.error ? event.error.message : \"\");\n    }\n\n    return (\n        <div className=\"payment\">\n            <div className=\"payment__container\">\n\n                <h1>Checkout ({<Link to=\"/checkout\">{basket?.length} items</Link>})</h1>\n\n                {/* Payment section => Delivery Address */}\n                <div className=\"payment__section\">\n                    <div className=\"payment__title\">\n                        <h3>Delivery Address</h3>\n                    </div>\n                    <div className=\"payment__address\">\n                        <p>{user?.email}</p>\n                        <p>14 Fake Street </p>\n                        <p>Delhi, India</p>\n                    </div>\n                </div>\n\n                {/* Payment section => Review Items*/}\n                <div className=\"payment__section\">\n                    <div className=\"payment__title\">\n                        <h3>Review items and delivery</h3> \n                    </div>\n                    <div className=\"payment__items\">\n                        {/* Products */}\n                        {basket.map(item => (\n                            <CheckoutProduct\n                                id={item.id}\n                                title={item.title}\n                                image={item.image}\n                                price={item.price}\n                                rating={item.rating}\n                            />\n                        ))}\n                    </div>\n                </div>\n\n                {/* Payment section => Payment Method*/}\n                <div className=\"payment__section\">\n                    <div className=\"payment__title\">\n                        <h3>Payment Method</h3>\n                    </div>\n                    <div className=\"payment__details\">\n                        <form onSubmit={handleSubmit}>\n                            <CardElement onChange={handleChange}/>\n\n                            <div className=\"payment__priceContainer\">\n                                <CurrencyFormat\n                                    renderText={(value) => (\n                                        <h3>Order Total: {value}</h3>\n                                    )}\n                                    decimalScale={2}\n                                    value ={getBasketTotal}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    prefix={\"$\"}\n                                />\n\n                            <div style={{backgroundColor:'#EAEDED', padding:'10px 10px'}}>\n                                <small>Card Number: abcd abcd abcd abcd</small>\n                                <br></br>\n                                <small> MM / YY4</small>\n                                <br></br>\n                                <small>CVC :42424 </small>\n                            </div>\n                                <button disabled={processing || disabled || succeeded}>\n                                    <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\n                                </button>\n                            </div>\n\n                            {/* Error */}\n                            {error && <div>{error}</div>}\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Payment\n"]},"metadata":{},"sourceType":"module"}